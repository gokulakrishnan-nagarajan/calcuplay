{"version":3,"sources":["components/GamePage.js","components/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["getTimestamp","Date","getTime","prepend","string","length","GamePage","timerHandle","currentTime","displayOperator","operator","history","useHistory","useParams","operation","useState","startFlag","setStartFlag","stopFlag","setStopFlag","timer","setTimer","input1","setInput1","input2","setInput2","actualResult","setActualResult","round","setRound","passed","setPassed","resultInput","setResultInput","class","useEffect","startTime","setInterval","generateInputs","clearInterval","parseInt","Math","random","eval","getDisplayTimer","minutes","floor","seconds","toString","toFixed","resultInputChanged","e","target","value","resultSubmit","key","console","log","stopGame","startGame","setTimeout","document","getElementById","focus","quit","push","className","id","type","onChange","onKeyPress","onClick","LandingPage","routeTo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e193c2ba.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport './GamePage.scss';\r\n\r\nfunction getTimestamp() {\r\n  return (new Date()).getTime()\r\n}\r\n\r\nfunction prepend(string, length) {\r\n  while(string.length < length) {\r\n    string = '0' + string;\r\n  }\r\n  return string;\r\n}\r\n\r\nfunction GamePage() {\r\n  let timerHandle, currentTime, displayOperator, operator;\r\n\r\n  const history = useHistory();\r\n  const { operation } = useParams();\r\n\r\n  const [startFlag, setStartFlag] = useState(false);\r\n  const [stopFlag, setStopFlag] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [input1, setInput1] = useState(0);\r\n  const [input2, setInput2] = useState(0);\r\n  const [actualResult, setActualResult] = useState(0);\r\n  const [round, setRound] = useState(0);\r\n  const [passed, setPassed] = useState(0);\r\n  const [resultInput, setResultInput] = useState('');\r\n\r\n  switch(operation) {\r\n    case 'addition':\r\n      displayOperator = '+';\r\n      operator = '+';\r\n      break;\r\n    case 'subtraction':\r\n      displayOperator = '-';\r\n      operator = '-';\r\n      break;\r\n    case 'multiplication':\r\n      displayOperator = 'x';\r\n      operator = '*';\r\n      break;\r\n    case 'division':\r\n      displayOperator = <span class=\"division-symbol\">&#247;</span>;\r\n      operator = '/';\r\n      break;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(startFlag) {\r\n      let startTime = getTimestamp();\r\n      timerHandle = setInterval(() => {\r\n        currentTime = getTimestamp();\r\n        setTimer(currentTime - startTime);\r\n      }, 100);\r\n\r\n      generateInputs();\r\n    } else {\r\n      clearInterval(timerHandle);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timerHandle);\r\n    };\r\n  }, [startFlag]);\r\n\r\n  const generateInputs = () => {\r\n    let input1 = parseInt(Math.random() * 100), input2 = parseInt(Math.random() * 100);\r\n    if(operation === 'multiplication' && input2 > 9) {\r\n      input2 = input2 % 10;\r\n    }\r\n    setInput1(input1);\r\n    setInput2(input2);\r\n    setActualResult(eval(input1 + operator + input2));\r\n  };\r\n\r\n  const getDisplayTimer = () => {\r\n    const minutes = Math.floor(timer / (1000 * 60));\r\n    const seconds = (timer % (1000 * 60)) / 1000;\r\n    return prepend(minutes.toString(), 2) + ' : ' + prepend(seconds.toFixed(1).toString(), 4);\r\n  };\r\n\r\n  const resultInputChanged = (e) => {\r\n    setResultInput(e.target.value);\r\n  };\r\n\r\n  const resultSubmit = (e) => {\r\n    // console.log(e);\r\n    if(e.key === 'Enter') {\r\n      console.log(parseInt(e.target.value), actualResult, parseInt(e.target.value) === actualResult);\r\n      if(parseInt(e.target.value) === actualResult) {\r\n        setPassed(passed + 1);\r\n      }\r\n      setRound(round + 1);\r\n      generateInputs();\r\n      setResultInput('');\r\n      if(round === 9) {\r\n        stopGame();\r\n      }\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    console.log('Game Started');\r\n    setStartFlag(true);\r\n    setTimeout(() => {\r\n      document.getElementById('result').focus();\r\n    });\r\n  };\r\n\r\n  const stopGame = () => {\r\n    console.log('Game Stopped');\r\n    setStartFlag(false);\r\n    setStopFlag(true);\r\n  };\r\n\r\n  const quit = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container center-center\">\r\n      <div className=\"game-area flex-column flex-center\">\r\n        <div className=\"timer\">{getDisplayTimer()}</div>\r\n        {startFlag && !stopFlag ? \r\n          <div className=\"numbers-section flex-center\">\r\n            <span className=\"mr-15\">{input1}</span>\r\n            <span className=\"mr-15\">{displayOperator}</span>\r\n            <span className=\"mr-15\">{input2}</span>\r\n            <span className=\"mr-15\">=</span>\r\n            <input id=\"result\" className=\"result-input\" type=\"number\" value={resultInput} onChange={resultInputChanged} onKeyPress={resultSubmit}></input>\r\n          </div> :\r\n          null\r\n        }\r\n        {!startFlag && stopFlag ? \r\n          <div className=\"numbers-section flex-center\">\r\n            {passed} of {round} passed !\r\n          </div> :\r\n          null\r\n        }\r\n        {!startFlag && !stopFlag ? <div className=\"op-btn start\" onClick={startGame}>Start</div> : null}\r\n        {startFlag && !stopFlag ? <div className=\"op-btn stop\" onClick={stopGame}>Stop</div> : null}\r\n        {!startFlag && stopFlag ? <div className=\"op-btn quit\" onClick={quit}>Quit</div> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport './LandingPage.scss';\r\n\r\nfunction LandingPage() {\r\n  const history = useHistory();\r\n\r\n  const routeTo = (operation) => {\r\n    history.push('/game/' + operation);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container center-center\">\r\n      <div className=\"game-card-container flex-row flex-wrap center-center\">\r\n        <div className=\"game-card flex-column center-center\" onClick={() => routeTo('addition')}><span>Addition</span><span className=\"operation-sign\">(+)</span></div>\r\n        <div className=\"game-card flex-column center-center\" onClick={() => routeTo('subtraction')}><span>Subtraction</span><span className=\"operation-sign\">(-)</span></div>\r\n        <div className=\"game-card flex-column center-center\" onClick={() => routeTo('multiplication')}><span>Multiplication</span><span className=\"operation-sign\">(x)</span></div>\r\n        {/* <div className=\"game-card flex-column center-center\" onClick={() => routeTo('division')}><span>Division</span><span className=\"operation-sign\">(&#247;)</span></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport LandingPage from \"./components/LandingPage\";\nimport GamePage from \"./components/GamePage\";\n\nimport './assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <LandingPage></LandingPage>\n        </Route>\n        <Route exact path=\"/game/:operation\">\n          <GamePage></GamePage>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}